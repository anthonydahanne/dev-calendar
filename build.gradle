plugins {
	id 'checkstyle'
	id 'java'
	id 'io.spring.javaformat'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

base {
	archivesName = 'meetups-calendar'
}

java {
	sourceCompatibility = 17
	targetCompatibility = 17
}

dependencies {
	checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:$javaFormatVersion")

	implementation(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
	implementation('net.sf.biweekly:biweekly:0.6.7')
	implementation('org.apache.httpcomponents.client5:httpclient5')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.webjars:fullcalendar:5.11.3')
	implementation('org.webjars:webjars-locator-core')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.xerial:sqlite-jdbc:3.44.1.0')
	implementation('org.hibernate.orm:hibernate-community-dialects')


	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'io.rest-assured:rest-assured'
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')

	developmentOnly("org.springframework.boot:spring-boot-docker-compose")
}

checkstyle {
	configProperties = [ 'checkstyle.config.dir' : file('config/checkstyle') ]
}

tasks.named("test") {
	useJUnitPlatform()
}
